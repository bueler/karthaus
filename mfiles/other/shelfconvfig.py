#!/usr/bin/env python3

"""
Generate a figure showing convergence of the shelf computation.  Uses data
generated by shelfconv.m.  Entire justification of this python code is to
bypass Octave bug related to printing O(dx^{%.2f}).
"""

import numpy as np
import matplotlib.pyplot as plt

dx = [4.0, 2.0, 1.0, 0.5, 0.25, 0.125, 0.0625]
merr = [0.62065, 0.16795, 0.04263, 0.01027, 0.00227, 0.00041, 0.00064]
p = [1.83515, -3.19149]  # polyfit() parameters; see shelfconv.m

plt.loglog(dx,merr,'bo-',markersize=10.0,markerfacecolor='w')
plt.loglog(dx,np.exp(p[0]*np.log(dx)+p[1]),'r:',linewidth=2.0)
plt.text(0.25,5.0e-4,'rate $O(\Delta x^{1.84})$',color='r',fontsize=16.0)
plt.xlabel('$\Delta x$  (km)',fontsize=14.0)
plt.ylabel('maximum error  (m/a)',fontsize=14.0)
plt.grid(True)
plt.axis([0.01, 10.0, 0.0001,1.0])

#plt.show()
plt.savefig('fig8_12.pdf',bbox_inches='tight')
